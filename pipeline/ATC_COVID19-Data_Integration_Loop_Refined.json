{
	"name": "ATC_COVID19-Data_Integration_Loop_Refined",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(split(item().name,'.')[0],split(split(item().name,'.')[0],'_')[0])",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "JsonReadSettings"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings",
													"copyBehavior": "FlattenHierarchy"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "COPS_ADLS_json",
												"type": "DatasetReference",
												"parameters": {
													"Filesystem": "@pipeline().parameters.SourceFilesystem",
													"Directory": "@pipeline().parameters.SourceDirectory",
													"Filename": "@{split(item().name,'.')[0]}",
													"FileExtension": "@{split(item().name,'.')[1]}"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "COPS_ADLS_json",
												"type": "DatasetReference",
												"parameters": {
													"Filesystem": "@pipeline().parameters.DestinationFilesystem",
													"Directory": "@pipeline().parameters.DestinationDirectory",
													"Filename": {
														"value": "@concat(split(item().name,'.')[0],'_',pipeline().TriggerTime)",
														"type": "Expression"
													},
													"FileExtension": "@pipeline().parameters.DestinationFileExtension"
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "COPS_ADLS_json",
						"type": "DatasetReference",
						"parameters": {
							"Filesystem": "@pipeline().parameters.SourceFilesystem",
							"Directory": "@pipeline().parameters.SourceDirectory",
							"Filename": "@pipeline().parameters.SourceFilename",
							"FileExtension": "@pipeline().parameters.SourceFileExtension"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "ForEach1_copy1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "If Condition2",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(concat(split(split(item().name,'.')[0],'_')[0],'_',pipeline().TriggerTime),split(item().name,'.')[0])",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data1_copy1_copy1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "JsonReadSettings"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings",
													"copyBehavior": "FlattenHierarchy"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "COPS_ADLS_json",
												"type": "DatasetReference",
												"parameters": {
													"Filesystem": "@pipeline().parameters.DestinationFilesystem",
													"Directory": "@pipeline().parameters.DestinationDirectory",
													"Filename": {
														"value": "@concat(split(item().name,'.')[0],'_',pipeline().TriggerTime)",
														"type": "Expression"
													},
													"FileExtension": "@pipeline().parameters.DestinationFileExtension"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "COPS_ADLS_json",
												"type": "DatasetReference",
												"parameters": {
													"Filesystem": "@pipeline().parameters.DestinationFilesystem",
													"Directory": "@pipeline().parameters.DestinationDirectory",
													"Filename": {
														"value": "@{split(item().name,'.')[0]}",
														"type": "Expression"
													},
													"FileExtension": "@pipeline().parameters.DestinationFileExtension"
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Get Metadata1_copy1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "COPS_ADLS_json",
						"type": "DatasetReference",
						"parameters": {
							"Filesystem": "@pipeline().parameters.DestinationFilesystem",
							"Directory": "@pipeline().parameters.DestinationDirectory",
							"Filename": "@pipeline().parameters.DestinationFilename",
							"FileExtension": "@pipeline().parameters.DestinationFileExtension"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			}
		],
		"parameters": {
			"DestinationFilesystem": {
				"type": "string",
				"defaultValue": "atc-va"
			},
			"DestinationDirectory": {
				"type": "string",
				"defaultValue": "Refined"
			},
			"DestinationFilename": {
				"type": "string",
				"defaultValue": "*"
			},
			"DestinationFileExtension": {
				"type": "string",
				"defaultValue": "json"
			},
			"SourceFilesystem": {
				"type": "string",
				"defaultValue": "atc-va"
			},
			"SourceDirectory": {
				"type": "string",
				"defaultValue": "Staging"
			},
			"SourceFilename": {
				"type": "string",
				"defaultValue": "*"
			},
			"SourceFileExtension": {
				"type": "string",
				"defaultValue": "*json"
			}
		},
		"annotations": []
	}
}