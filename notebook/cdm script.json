{
	"name": "cdm script",
	"properties": {
		"nbformat": 0,
		"nbformat_minor": 0,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "f2306db0-e884-45d4-aa60-eea80e2bfc62"
					}
				},
				"source": [
					"#Specifying appid, appkey and tenanid is optional in spark-cdm-connector-assembly-0.16.jar with Premium Databricks Cluster and Synapse \n",
					"appid = \"0256c781-35ff-4669-94dd-bb33a60b1731\" # Appid- 0256c781-35ff-4669-94dd-bb33a60b1731, \n",
					"appkey = \"p7pujO-8E22tr83J6_o4bgN.mJG8c-cq8V\" # Secret- p7pujO-8E22tr83J6_o4bgN.mJG8c-cq8V\n",
					"tenantid = \"35b69a76-5314-4454-aa0a-35fb0ebd48dc\" #Tenant- 35b69a76-5314-4454-aa0a-35fb0ebd48dc\n",
					"storageAccountName = \"dlacopdemocomm02.dfs.core.windows.net\"\n",
					"container = \"pmn-data\"\n",
					""
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "dff471ab-2de4-4e63-8dfb-55410029d912"
					}
				},
				"source": [
					"configs = {\"fs.azure.account.auth.type\": \"OAuth\",\n",
					"           \"fs.azure.account.oauth.provider.type\": \"org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\",\n",
					"           \"fs.azure.account.oauth2.client.id\": appid,\n",
					"           \"fs.azure.account.oauth2.client.secret\": appkey,\n",
					"           \"fs.azure.account.oauth2.client.endpoint\": \"https://login.microsoftonline.com/\"+tenantid+\"/oauth2/token\"}\n",
					""
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "9c428b82-2e9c-4039-8b56-2fdc9423c340"
					}
				},
				"source": [
					" dbutils.fs.mount(\n",
					"  source = \"abfss://pmn-data@dlacopdemocomm02.dfs.core.windows.net/\",\n",
					"   mount_point = \"/mnt/pmn-data\",\n",
					"   extra_configs = configs)"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "c34f6dc8-82b9-4cb5-92c9-8155244cb789"
					}
				},
				"source": [
					"DFSCollection = dbutils.fs.ls(\"/mnt/pmn-data/raw-files/\")"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "bd4757ec-2fb4-423e-bbf3-8e529294f4b9"
					}
				},
				"source": [
					"df=spark.createDataFrame(DFSCollection)"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "4aa9147d-4d66-4d50-b74c-75e9bbf20ecc"
					}
				},
				"source": [
					"print(df.name)"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "25fe46f6-5b89-4d56-addc-7346b1b11a79"
					}
				},
				"source": [
					"for row in df.collect():\n",
					"  print(row.path)\n",
					"  dfread = spark.read.format('csv').options(header='true').load(row.path)\n",
					"  (dfread.write.format(\"com.microsoft.cdm\")\n",
					"  .option(\"storage\", storageAccountName)\n",
					"  .option(\"manifestPath\", container + \"/business-data/pmn-data.manifest.cdm.json\")\n",
					"  .option(\"entity\", row.name)\n",
					"  .save())"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "40f6491f-5e17-4065-8071-7114dc90d1b5"
					}
				},
				"source": [
					"%fs\n",
					"head dbfs:/mnt/pmd-data/raw-files/*.csv"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "b1fb42de-ba75-40aa-8795-3409756bea1e"
					}
				},
				"source": [
					"df = spark.read.format('csv').options(header='true').load(\"/mnt/pmn-data/raw-files/\"+row.path.split('/')[4])\n",
					"#spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/path/to_csv.csv\") \n",
					"#spark.read.option(\"header\", \"true\").csv(\"/path/to_csv.csv\")"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "d419d09f-4616-4147-ad4a-a2f142ed36c0"
					}
				},
				"source": [
					"# Optionally, you can add <directory-name> to the source URI of your mount point.\n",
					"#dbutils.fs.mount(\n",
					"#  source = \"abfss://power-bi-cdm@dlacopdemocomm02.dfs.core.windows.net/\",\n",
					"#  mount_point = \"/mnt/power-bi-cdm\",\n",
					"#  extra_configs = configs)\n",
					"\n",
					""
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "d4fd452d-7127-42d0-98f2-2807544eab07"
					}
				},
				"source": [
					"#dbutils.fs.unmount(\"/mnt/power-bi-cdm\")"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "cbd9a50d-bd97-4975-8e5b-0c9be49ab776"
					}
				},
				"source": [
					"# Implicit write case\n",
					"from pyspark.sql.types import *\n",
					"from pyspark.sql import functions, Row\n",
					"from decimal import Decimal\n",
					"from datetime import datetime\n",
					"\n",
					"# Write a CDM entity with Parquet data files, entity definition is derived from the dataframe schema\n",
					"d = datetime.strptime(\"2015-03-31\", '%Y-%m-%d')\n",
					"ts = datetime.now()\n",
					"data = [\n",
					"  [\"a\", 1, True, 12.34, 6, d, ts, Decimal(1.4337879), Decimal(999.00), Decimal(18.8)],\n",
					"  [\"b\", 1, True, 12.34, 6, d, ts, Decimal(1.4337879), Decimal(999.00), Decimal(18.8)]\n",
					"]\n",
					"\n",
					"schema = (StructType()\n",
					"  .add(StructField(\"name\", StringType(), True))\n",
					"  .add(StructField(\"id\", IntegerType(), True))\n",
					"  .add(StructField(\"flag\", BooleanType(), True))\n",
					"  .add(StructField(\"salary\", DoubleType(), True))\n",
					"  .add(StructField(\"phone\", LongType(), True))\n",
					"  .add(StructField(\"dob\", DateType(), True))\n",
					"  .add(StructField(\"time\", TimestampType(), True))\n",
					"  .add(StructField(\"decimal1\", DecimalType(15, 3), True))\n",
					"  .add(StructField(\"decimal2\", DecimalType(38, 7), True))\n",
					"  .add(StructField(\"decimal3\", DecimalType(5, 2), True))\n",
					")"
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "a9665d0a-f66d-445f-9f92-03d7c44a3c26"
					}
				},
				"source": [
					"df = spark.createDataFrame(spark.sparkContext.parallelize(data), schema)\n",
					""
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "634d178c-4a6e-47b7-820e-ce2793c8d216"
					}
				},
				"source": [
					"# Creates the CDM manifest and adds the entity to it with gzip'd parquet partitions\n",
					"# with both physical and logical entity definitions \n",
					"(df.write.format(\"com.microsoft.cdm\")\n",
					"  .option(\"storage\", storageAccountName)\n",
					"  .option(\"manifestPath\", container + \"/business-data/pmn-data.manifest.cdm.json\")\n",
					"  .option(\"entity\", \"pmn-data\")\n",
					"  #.option(\"format\", \"parquet\")\n",
					" # .option(\"compression\", \"gzip\")\n",
					"  .save())\n",
					""
				],
				"attachments": null,
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "aa02432b-086b-44df-8779-c4d0eccb57d2"
					}
				},
				"source": [
					"readDf = (spark.read.format(\"com.microsoft.cdm\")\n",
					"  .option(\"storage\", storageAccountName)\n",
					"  .option(\"manifestPath\", container + \"/business-data/pmn-data.manifest.cdm.json\")\n",
					"  .option(\"entity\", \"pmn-data\")\n",
					"  .load())\n",
					"\n",
					"readDf.select(\"*\").show()"
				],
				"attachments": null,
				"execution_count": 0
			}
		]
	}
}