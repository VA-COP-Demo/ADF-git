{
	"name": "K2G_Data_Profiling",
	"properties": {
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "614ee984-a557-473c-9fa7-c80dfd413899"
					}
				},
				"source": [
					"%sql\n",
					"describe CMS_DE_SYNTH_CLAIMS.BENEFICIARY_SUMMARY"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "824a77fc-147e-4657-9451-ecf62f99590d"
					}
				},
				"source": [
					"%sql\n",
					"select count(*) from CMS_DE_SYNTH_CLAIMS.BENEFICIARY_SUMMARY"
				],
				"execution_count": 0
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "735ffabe-e257-40ff-920f-6895a4e80ecc"
					}
				},
				"source": [
					"Perform some very basic profiling."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "68e94f71-dd4c-4667-8e58-7a9dd2f115b4"
					}
				},
				"source": [
					"dbutils.fs.rm('dbfs:/home/cary.moore@databricks.com/syn_claim_puf/profile', True)\n",
					"spark.sql(\"drop table if exists CMS_DE_SYNTH_CLAIMS.profile_data\")"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "b75b2c76-b247-4736-85df-2fbae3363955"
					}
				},
				"source": [
					"from pyspark.sql import *\n",
					"from pyspark.sql.functions import *\n",
					"from pyspark import SparkContext"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "fd604044-0f0e-4e81-9119-f40f26664fe6"
					}
				},
				"source": [
					"%sql\n",
					"create table CMS_DE_SYNTH_CLAIMS.profile_data (\n",
					"name  string,\n",
					"value string,\n",
					"num_records float,\n",
					"len float\n",
					")\n",
					"using delta\n",
					"location 'dbfs:/home/cary.moore@databricks.com/syn_claim_puf/profile'"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "369993f5-2ea1-4137-aa56-bb1734e8f39d"
					}
				},
				"source": [
					"from pyspark.sql import *\n",
					"from pyspark.sql.functions import *\n",
					"from pyspark import SparkContext\n",
					"\n",
					"def get_databases():\n",
					"  database_df = spark.sql(\"show databases\")\n",
					"  database_df = database_df.filter(database_df.databaseName!='k2g_metadata')\n",
					"  database_list = database_df.select('databaseName').collect()\n",
					"  return database_list\n",
					"\n",
					"def get_tables(database_name):\n",
					"  table_df = spark.sql(\"show tables from \" + database_name)\n",
					"  table_list = table_df.select('database','tableName').collect()\n",
					"  return table_list\n",
					"\n",
					"def get_columns(database_name, table_name):\n",
					"  column_df = spark.sql(\"show columns from \" + database_name + \".\" + table_name)\n",
					"  column_list = column_df.select('col_name').collect()\n",
					"  return column_list\n",
					"\n",
					"def profile_columns(database_name, table_name, column_name):\n",
					"  sql = 'select ' + \\\n",
					"  \"'\" + database_name + \"'\" + ' as database_name, ' + \\\n",
					"  \"'\" + table_name + \"'\" + ' as table_name, ' + \\\n",
					"  \"'\" + column_name + \"'\" + ' as column_name, ' + \\\n",
					"  column_name + ' as value, ' + \\\n",
					"  'count(*) as num_records, length(' + column_name + ') as len from ' + \\\n",
					"  database_name + '.' + table_name + ' group by ' + column_name\n",
					"  \n",
					"  df = spark.sql(sql)\n",
					"  \n",
					"  df2 = (df.select('database_name', 'table_name', 'column_name', 'num_records', 'value').withColumn('length', length('value')).withColumn('not_null_records', when((col('value').isNull()), \\\n",
					"       lit(0)).otherwise(col('num_records')))) \\\n",
					"      .groupBy('database_name', 'table_name', 'column_name') \\\n",
					"      .agg(sum('num_records').alias(\"total_records\"), \\\n",
					"           countDistinct('value').alias('distinct_values'), \\\n",
					"           min('value').cast(StringType()).alias('min_value'), \\\n",
					"           max('value').cast(StringType()).alias('max_value'), \\\n",
					"           max('length').alias('max_length'), \\\n",
					"           sum('not_null_records').alias('not_null_records'))\n",
					"\n",
					"  df2.write.format(\"delta\").mode(\"append\").save(\"dbfs:/home/cary.moore@databricks.com/k2g_metadata/tables/profile_data\")\n",
					"  \n",
					"  return 0"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "009cea8a-139e-4440-b0d0-6e49e1e1bd17"
					}
				},
				"source": [
					"%sql\n",
					"truncate table k2g_metadata.profile_data"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "adb9f036-824a-4eb5-8b36-e4143474f883"
					}
				},
				"source": [
					"%sql\n",
					"vacuum k2g_metadata.profile_data"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "bbb0e56e-0159-41ca-86e5-0d2b2a625357"
					}
				},
				"source": [
					"for x in get_databases():\n",
					"  for y in get_tables(x[0]):\n",
					"    for z in get_columns(y[0], y[1]):\n",
					"      try:\n",
					"        profile_columns(y[0], y[1], z[0])\n",
					"      except:\n",
					"        print(y[0], y[1], z[0])"
				],
				"execution_count": 0
			},
			{
				"cell_type": "code",
				"metadata": {
					"application/vnd.databricks.v1+cell": {
						"title": "",
						"showTitle": false,
						"nuid": "878736e2-6fb0-413e-85fe-27b622df3464"
					}
				},
				"source": [
					"%sql\n",
					"select * from k2g_metadata.profile_data order by 1, 2"
				],
				"execution_count": 0
			}
		]
	}
}